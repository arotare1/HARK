census92 <- rbind(census92, state_data92('Nevada', 'nevada', 8:24, c(1,8,9)))
census92 <- rbind(census92, state_data92('New Hampshire', 'newhampshire', 19:50, c(1,8,9)))
census92 <- rbind(census92, state_data92('New Jersey', 'newjersey', 37:88, c(1,8,9)))
census92 <- rbind(census92, state_data92('New Mexico', 'newmexico', 13:54, c(1,7,8)))
census92 <- rbind(census92, state_data92('New York', 'newyork', 26:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('North Carolina', 'northcarolina', 27:86, c(1,7,8)))
census92 <- rbind(census92, state_data92('North Carolina', 'northcarolina-2', 8:88, c(1,8,9)))
census92 <- rbind(census92, state_data92('North Dakota', 'northdakota', 17:74, c(1,7,8)))
census92 <- rbind(census92, state_data92('Ohio', 'ohio', 8:84, c(1,8,9)))
census92 <- rbind(census92, state_data92('Ohio', 'ohio-2', 8:86, c(1,8,9)))
census92 <- rbind(census92, state_data92('Oklahoma', 'oklahoma', 17:61, c(1,7,8)))
census92 <- rbind(census92, state_data92('Oklahoma', 'oklahoma-2', 8:77, c(1,8,9)))
census92 <- rbind(census92, state_data92('Oregon', 'oregon', 19:53, c(1,7,8)))
census92 <- rbind(census92, state_data92('Pennsylvania', 'pennsylvania', 60:94, c(1,7,8)))
census92 <- rbind(census92, state_data92('Pennsylvania', 'pennsylvania-2', 8:39, c(1,8,9)))
census92 <- rbind(census92, state_data92('Rhode Island', 'rhodeisland', 16:20, c(1,7,8)))
census92 <- rbind(census92, state_data92('South Carolina', 'southcarolina', 8:89, c(1,8,9)))
census92 <- rbind(census92, state_data92('South Dakota', 'southdakota', 12:21, c(1,7,8)))
census92 <- rbind(census92, state_data92('South Dakota', 'southdakota-2', 8:69, c(1,8,9)))
census92 <- rbind(census92, state_data92('Tennessee', 'tennessee', 26:59, c(1,7,8)))
census92 <- rbind(census92, state_data92('Tennessee', 'tennessee-2', 8:88, c(1,8,9)))
census92 <- rbind(census92, state_data92('Texas', 'texas', 8:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Texas', 'texas-2', 8:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Texas', 'texas-3', 8:90, c(1,8,9)))
census92 <- rbind(census92, state_data92('Utah', 'utah', 8:62, c(1,8,9)))
census92 <- rbind(census92, state_data92('Vermont', 'vermont', 11:20, c(1,7,8)))
census92 <- rbind(census92, state_data92('Vermont', 'vermont-2', 8:25, c(1,8,9)))
census92 <- rbind(census92, state_data92('Virginia', 'virginia', 35:64, c(1,7,8)))
census92 <- rbind(census92, state_data92('Virginia', 'virginia-2', 8:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Virginia', 'virginia-3', 8:33, c(1,8,9)))
census92 <- rbind(census92, state_data92('Washington', 'washington', 26:85, c(1,7,8)))
census92 <- rbind(census92, state_data92('West Virginia', 'westvirginia', 25:90, c(1,8,9)))
census92 <- rbind(census92, state_data92('Wisconsin', 'wisconsin', 37:60, c(1,7,8)))
census92 <- rbind(census92, state_data92('Wisconsin', 'wisconsin-2', 8:90, c(1,8,9)))
census92 <- rbind(census92, state_data92('Wyoming', 'wyoming', 12:34, c(1,7,8)))
# bring values from millions to thousands to match 2002 and 2007 data
census92$valadd92 <- 1000*census92$valadd92
census92$cost92 <- 1000*census92$cost92
# Create 2002 and 2007 data
census02 <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_code/ECN_2002_US_31A1/ECN_2002_US_31A1.csv')
census07 <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_code/ECN_2007_US_31A1/ECN_2007_US_31A1.csv')
# keep only value added and cost
census02 <- census02[, c(2,3,17,18)]
census07 <- census07[, c(2,17,18)]
names(census02) <- c('cty_id', 'cty_name_census', 'valadd02', 'cost02')
names(census07) <- c('cty_id', 'valadd07', 'cost07')
# create state variable
census02$state_name <- lapply(census02$cty_name_census,
function(x) strsplit(as.character(x), ', ')[[1]][2])
census02$cty_name_census <- lapply(census02$cty_name_census,
function(x) strsplit(as.character(x), ', ')[[1]][1])
# merge 2002 and 2007 data
census02_07 <- merge(census02, census07, by='cty_id')
# drop Alaska and Hawaii
census02_07 <- census02_07[which(! census02_07$state_name %in% c("Alaska", "Hawaii")), ]
# merge 2002-2007 data with czone corsswalk
census02_07 <- merge(census02_07, crosswalk)
# merge 2002-2007 data with 1992 data
census <- merge(census92, census02_07)
#-------------------------------------------------------
# Create 'long' dataset for change between 1992 and 2007
#-------------------------------------------------------
# group by czone and sum up value added and cost; NAs are treated as 0
manuf_long <- ddply(census, 'czone', summarise,
valadd92=sum(valadd92, na.rm=T),
valadd02=sum(valadd02, na.rm=T),
valadd07=sum(valadd07, na.rm=T),
cost92=sum(cost92, na.rm=T),
cost02=sum(cost02, na.rm=T),
cost07=sum(cost07, na.rm=T))
# remove czones with missing values
manuf_long <- manuf_long[which(manuf_long$valadd92 > 0 &
manuf_long$valadd02 > 0 &
manuf_long$valadd07 > 0 &
manuf_long$cost92 > 0 &
manuf_long$cost02 > 0 &
manuf_long$cost07 > 0), ]
#----------------------------------------------------------------------------------
# Compute change in value added and gross output in 2007 dollars using PCE deflator
# URL: https://fred.stlouisfed.org/series/DPCERD3A086NBEA
#----------------------------------------------------------------------------------
manuf_long$valadd92 <- 97.102/71.494*manuf_long$valadd92
manuf_long$valadd02 <- 97.102/84.736*manuf_long$valadd02
manuf_long$cost92 <- 97.102/71.494*manuf_long$cost92
manuf_long$cost02 <- 97.102/84.736*manuf_long$cost02
# gross output = value added + cost of materials
manuf_long$output92 <- manuf_long$valadd92 + manuf_long$cost92
manuf_long$output02 <- manuf_long$valadd02 + manuf_long$cost02
manuf_long$output07 <- manuf_long$valadd07 + manuf_long$cost07
# compute percent changes
manuf_long$d_92_02_valadd <- (manuf_long$valadd02 / manuf_long$valadd92 - 1)*100
manuf_long$d_92_02_output <- (manuf_long$output02 / manuf_long$output92 - 1)*100
manuf_long$d_92_07_valadd <- (manuf_long$valadd07 / manuf_long$valadd92 - 1)*100
manuf_long$d_92_07_output <- (manuf_long$output07 / manuf_long$output92 - 1)*100
manuf_long$d_02_07_valadd <- (manuf_long$valadd07 / manuf_long$valadd02 - 1)*100
manuf_long$d_02_07_output <- (manuf_long$output07 / manuf_long$output02 - 1)*100
#-----------------------------------------------------------------------------------------------
# Create panel dataset by splitting up the long dataset and adding an indicator for period 02-07
#-----------------------------------------------------------------------------------------------
manuf_t1 <- manuf_long[, c(1, grep('d_92_02', names(manuf_long)))]
names(manuf_t1)[grep('d_92_02', names(manuf_t1))] <- c('d_valadd', 'd_output')
manuf_t1$t2 <- 0
manuf_t2 <- manuf_long[, c(1, grep('d_02_07', names(manuf_long)))]
names(manuf_t2)[grep('d_02_07', names(manuf_t2))] <- c('d_valadd', 'd_output')
manuf_t2$t2 <- 1
manuf_panel <- rbind(manuf_t1, manuf_t2)
manuf_panel <- manuf_panel[order(manuf_panel$czone), ]
row.names(manuf_panel) <- NULL
View(manuf_long)
#---------------------------------------
# Load ADH data and combine with my data
#---------------------------------------
adh_china_long <- read.dta('/Users/andreea/Documents/phd/itrade/project/adh2013_data/dta/workfile_china_long.dta')
intersect(names(manuf_long), names(adh_china_long))
intersect(names(manuf_panel), names(adh_china))
adh_china <- read.dta('/Users/andreea/Documents/phd/itrade/project/adh2013_data/dta/workfile_china.dta')
intersect(names(manuf_panel), names(adh_china))
manuf_long <- merge(manuf_long, adh_china_long)
View(manuf_long)
adh_china <- read.dta('/Users/andreea/Documents/phd/itrade/project/adh2013_data/dta/workfile_china.dta')
manuf_panel <- merge(manuf_panel, adh_china)
View(manuf_panel)
View(adh_china)
order(as.numeric(manuf_panel$czone))
source('~/Documents/phd/itrade/project/my_code/create_data.R')
View(manuf_panel)
source('~/Documents/phd/itrade/project/my_code/create_data.R')
source('~/Documents/phd/itrade/project/my_code/create_data.R')
rm(list=ls())
manuf_long <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_data/manuf_long.csv')
manuf_panel <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_data/manuf_panel.csv')
View(manuf_panel)
rm(list=ls())
library(foreign)
adh_china_long <- read.dta('/Users/andreea/Documents/phd/itrade/project/adh2013_data/dta/workfile_china_long.dta')
adh_china <- read.dta('/Users/andreea/Documents/phd/itrade/project/adh2013_data/dta/workfile_china.dta')
manuf_long <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_data/manuf_long.csv')
manuf_panel <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_data/manuf_panel.csv')
help(lm.cluster)
help("quantile")
quantile(manuf_long, probs=seq(0,1,0.05))
seq(0,1,0.05)
quantile(manuf_long$d_92_07_valadd, probs=seq(0, 1, 0.05))
quantile(manuf_long$d_92_07_valadd, probs=seq(0, 1, 0.02))
source('~/Documents/phd/itrade/project/my_code/create_data.R')
quantile(manuf_lpanel$d_valadd, probs=seq(0, 1, 0.02))
rm(list=ls())
library(foreign)
adh_china_long <- read.dta('/Users/andreea/Documents/phd/itrade/project/adh2013_data/dta/workfile_china_long.dta')
adh_china <- read.dta('/Users/andreea/Documents/phd/itrade/project/adh2013_data/dta/workfile_china.dta')
manuf_long <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_data/manuf_long.csv')
manuf_panel <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_data/manuf_panel.csv')
quantile(manuf_long$d_92_07_valadd, probs=seq(0, 1, 0.02))
quantile(manuf_lpanel$d_valadd, probs=seq(0, 1, 0.02))
quantile(manuf_panel$d_valadd, probs=seq(0, 1, 0.02))
quantile(manuf_long$d_92_07_valadd, probs=seq(0, 1, 0.02))
quantile(manuf_panel$d_valadd, probs=seq(0, 1, 0.02))
quantile(manuf_panel$d_output, probs=seq(0, 1, 0.02))
quantile(manuf_long$d_92_07_valadd, probs=seq(0, 1, 0.02))
source('~/Documents/phd/itrade/project/my_code/create_data.R')
View(census)
census$valadd92[which(census$czone==11101)]
View(manuf_long)
rm(list=ls())
library(plyr)
library(foreign)
#-------------------------------------------------------------------------------------
# Load crosswalk between counties and 1990 commuting zones
# URL: https://www.ers.usda.gov/data-products/commuting-zones-and-labor-market-areas/
#-------------------------------------------------------------------------------------
crosswalk <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_code/czlma903.csv')
names(crosswalk) <- c('cty_id', 'czone', 'cty_name_crosswalk')
crosswalk$state_id <- as.integer(crosswalk$cty_id/1000)
#----------------------------------------------------------------
# Add state to crosswalk
# URL: https://www.census.gov/geo/reference/ansi_statetables.html
#----------------------------------------------------------------
state_id <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_code/state_id.csv',
header=F)
state_id <- state_id[, 1:2]
names(state_id) <- c('state_name', 'state_id')
crosswalk <- merge(state_id, crosswalk, by='state_id')
#-----------------------------------------------------------------------------------------------
# Load Economic Census data
# Data series name: "Manufacturing: Geographic Area Series: Industry Statistics for the States,
#                   Metropolitan and Micropolitan Statistical Areas, Counties, and Places"
# 1992: https://www.census.gov/prod/www/economic_census.html#manu92area
#       only available as pdfs
# 2002: https://www.census.gov/data/tables/2002/econ/census/manufacturing-reports.html
#       also available in the American Fact Finder
# 2007: https://www.census.gov/data/tables/2007/econ/census/manufacturing-reports.html
#       also available in the American Fact Finder
#-----------------------------------------------------------------------------------------------
# Create 1992 data
state_data92 <- function(state_name, state_file, keep_rows, keep_cols) {
# Arguments:
# state_name    state's name in upper case with spaces, e.g. 'New Mexico', 'District of Columbia'
# state_file    csv file name, e.g. arkansas-2
# keep_rows     numeric vector of rows to be kept
# keep_cols     numeric vector of columns to be kept
# Output:
# csv with state data
path <- paste('/Users/andreea/Documents/phd/itrade/project/my_code/ECN_1992_US_21A1/raw_csv/tabula-',
state_file, sep='')
path <- paste(path, '.csv', sep='')
state_data <- read.csv(path, header=F)
state_data <- state_data[keep_rows, keep_cols]
names(state_data) <- c('cty_name_census92', 'valadd92', 'cost92')
state_data$cty_name_census92 <- as.character(state_data$cty_name_census92)
if(any(grep('\\(IC\\)', state_data$cty_name_census92))) {
print(c(state_name, 'changed IC to city'))
}
state_data$cty_name_census92 <- gsub('\\(IC\\)', 'city', state_data$cty_name_census92)
state_data$valadd92 <- as.character(state_data$valadd92)
state_data$cost92 <- as.character(state_data$cost92)
state_data <- state_data[which(state_data$valadd92 != '(D)' &
state_data$valadd92 != '(S)' &
state_data$valadd92 != '(Z)'), ]
state_data$valadd92 <- gsub(' ', '', state_data$valadd92)
state_data$cost92 <- gsub(' ', '', state_data$cost92)
state_data$valadd92 <- as.numeric(state_data$valadd92)
state_data$cost92 <- as.numeric(state_data$cost92)
state_data <- merge(state_data, crosswalk[which(crosswalk$state_name==state_name), ],
by.x='cty_name_census92', by.y='cty_name_crosswalk')
return(state_data)
}
census92 <- state_data92('Alabama', 'alabama', 8:74, c(1,8,9))
census92 <- rbind(census92, state_data92('Arizona', 'arizona', 16:30, c(1,7,8)))
census92 <- rbind(census92, state_data92('Arkansas', 'arkansas', 23:62, c(1,7,8)))
census92 <- rbind(census92, state_data92('Arkansas', 'arkansas-2', 8:88, c(1,8,9)))
census92 <- rbind(census92, state_data92('California', 'california', 24:80, c(1,8,9)))
census92 <- rbind(census92, state_data92('Colorado', 'colorado', 8:69, c(1,8,9)))
census92 <- rbind(census92, state_data92('Connecticut', 'connecticut', 46:53, c(1,8,9)))
census92 <- rbind(census92, state_data92('Delaware', 'delaware', 8:10, c(1,8,9)))
census92 <- rbind(census92, state_data92('District of Columbia', 'districtofcolumbia', 7, c(1,7,8)))
census92 <- rbind(census92, state_data92('Florida', 'florida', 31:90, c(1,7,8)))
census92 <- rbind(census92, state_data92('Florida', 'florida-2', 8:14, c(1,8,9)))
census92 <- rbind(census92, state_data92('Georgia', 'georgia', 8:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Georgia', 'georgia-2', 8:85, c(1,8,9)))
census92 <- rbind(census92, state_data92('Idaho', 'idaho', 11:20, c(1,8,9)))
census92 <- rbind(census92, state_data92('Idaho', 'idaho-2', 8:59, c(1,8,9)))
census92 <- rbind(census92, state_data92('Illinois', 'illinois', 30:63, c(1,7,8)))
census92 <- rbind(census92, state_data92('Illinois', 'illinois-2', 8:90, c(1,8,9)))
census92 <- rbind(census92, state_data92('Indiana', 'indiana', 23:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Indiana', 'indiana-2', 8:90, c(1,8,9)))
census92 <- rbind(census92, state_data92('Iowa', 'iowa', 24:37, c(1,8,9)))
census92 <- rbind(census92, state_data92('Iowa', 'iowa-2', 8:91, c(1,8,9)))
census92 <- rbind(census92, state_data92('Kansas', 'kansas', 16:59, c(1,7,8)))
census92 <- rbind(census92, state_data92('Kansas', 'kansas-2', 8:67, c(1,8,9)))
census92 <- rbind(census92, state_data92('Kentucky', 'kentucky', 34:88, c(1,7,8)))
census92 <- rbind(census92, state_data92('Kentucky', 'kentucky-2', 8:86, c(1,8,9)))
census92 <- rbind(census92, state_data92('Louisiana', 'louisiana', 7:61, c(1,7,8)))
census92 <- rbind(census92, state_data92('Louisiana', 'louisiana-2', 8:64, c(1,8,9)))
census92 <- rbind(census92, state_data92('Maine', 'maine', 22:57, c(1,8,9)))
census92 <- rbind(census92, state_data92('Maryland', 'maryland', 40:63, c(1,7,8)))
census92 <- rbind(census92, state_data92('Massachusetts', 'massachusetts', 42:86, c(1,7,8)))
census92 <- rbind(census92, state_data92('Michigan', 'michigan', 20:58, c(1,7,8)))
census92 <- rbind(census92, state_data92('Michigan', 'michigan-2', 8:86, c(1,8,9)))
census92 <- rbind(census92, state_data92('Minnesota', 'minnesota', 8:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Minnesota', 'minnesota-2', 8:90, c(1,8,9)))
census92 <- rbind(census92, state_data92('Mississippi', 'mississippi', 16:85, c(1,7,8)))
census92 <- rbind(census92, state_data92('Mississippi', 'mississippi-2', 8:19, c(1,8,9)))
census92 <- rbind(census92, state_data92('Missouri', 'missouri', 8:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Missouri', 'missouri-2', 8:42, c(1,8,9)))
census92 <- rbind(census92, state_data92('Montana', 'montana', 12:72, c(1,7,8)))
census92 <- rbind(census92, state_data92('Nebraska', 'nebraska', 17:86, c(1,7,8)))
census92 <- rbind(census92, state_data92('Nebraska', 'nebraska-2', 8:40, c(1,8,9)))
census92 <- rbind(census92, state_data92('Nevada', 'nevada', 8:24, c(1,8,9)))
census92 <- rbind(census92, state_data92('New Hampshire', 'newhampshire', 19:50, c(1,8,9)))
census92 <- rbind(census92, state_data92('New Jersey', 'newjersey', 37:88, c(1,8,9)))
census92 <- rbind(census92, state_data92('New Mexico', 'newmexico', 13:54, c(1,7,8)))
census92 <- rbind(census92, state_data92('New York', 'newyork', 26:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('North Carolina', 'northcarolina', 27:86, c(1,7,8)))
census92 <- rbind(census92, state_data92('North Carolina', 'northcarolina-2', 8:88, c(1,8,9)))
census92 <- rbind(census92, state_data92('North Dakota', 'northdakota', 17:74, c(1,7,8)))
census92 <- rbind(census92, state_data92('Ohio', 'ohio', 8:84, c(1,8,9)))
census92 <- rbind(census92, state_data92('Ohio', 'ohio-2', 8:86, c(1,8,9)))
census92 <- rbind(census92, state_data92('Oklahoma', 'oklahoma', 17:61, c(1,7,8)))
census92 <- rbind(census92, state_data92('Oklahoma', 'oklahoma-2', 8:77, c(1,8,9)))
census92 <- rbind(census92, state_data92('Oregon', 'oregon', 19:53, c(1,7,8)))
census92 <- rbind(census92, state_data92('Pennsylvania', 'pennsylvania', 60:94, c(1,7,8)))
census92 <- rbind(census92, state_data92('Pennsylvania', 'pennsylvania-2', 8:39, c(1,8,9)))
census92 <- rbind(census92, state_data92('Rhode Island', 'rhodeisland', 16:20, c(1,7,8)))
census92 <- rbind(census92, state_data92('South Carolina', 'southcarolina', 8:89, c(1,8,9)))
census92 <- rbind(census92, state_data92('South Dakota', 'southdakota', 12:21, c(1,7,8)))
census92 <- rbind(census92, state_data92('South Dakota', 'southdakota-2', 8:69, c(1,8,9)))
census92 <- rbind(census92, state_data92('Tennessee', 'tennessee', 26:59, c(1,7,8)))
census92 <- rbind(census92, state_data92('Tennessee', 'tennessee-2', 8:88, c(1,8,9)))
census92 <- rbind(census92, state_data92('Texas', 'texas', 8:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Texas', 'texas-2', 8:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Texas', 'texas-3', 8:90, c(1,8,9)))
census92 <- rbind(census92, state_data92('Utah', 'utah', 8:62, c(1,8,9)))
census92 <- rbind(census92, state_data92('Vermont', 'vermont', 11:20, c(1,7,8)))
census92 <- rbind(census92, state_data92('Vermont', 'vermont-2', 8:25, c(1,8,9)))
census92 <- rbind(census92, state_data92('Virginia', 'virginia', 35:64, c(1,7,8)))
census92 <- rbind(census92, state_data92('Virginia', 'virginia-2', 8:87, c(1,8,9)))
census92 <- rbind(census92, state_data92('Virginia', 'virginia-3', 8:33, c(1,8,9)))
census92 <- rbind(census92, state_data92('Washington', 'washington', 26:85, c(1,7,8)))
census92 <- rbind(census92, state_data92('West Virginia', 'westvirginia', 25:90, c(1,8,9)))
census92 <- rbind(census92, state_data92('Wisconsin', 'wisconsin', 37:60, c(1,7,8)))
census92 <- rbind(census92, state_data92('Wisconsin', 'wisconsin-2', 8:90, c(1,8,9)))
census92 <- rbind(census92, state_data92('Wyoming', 'wyoming', 12:34, c(1,7,8)))
# bring values from millions to thousands to match 2002 and 2007 data
census92$valadd92 <- 1000*census92$valadd92
census92$cost92 <- 1000*census92$cost92
# Create 2002 and 2007 data
census02 <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_code/ECN_2002_US_31A1/ECN_2002_US_31A1.csv')
census07 <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_code/ECN_2007_US_31A1/ECN_2007_US_31A1.csv')
# keep only value added and cost
census02 <- census02[, c(2,3,17,18)]
census07 <- census07[, c(2,17,18)]
names(census02) <- c('cty_id', 'cty_name_census', 'valadd02', 'cost02')
names(census07) <- c('cty_id', 'valadd07', 'cost07')
# create state variable
census02$state_name <- lapply(census02$cty_name_census,
function(x) strsplit(as.character(x), ', ')[[1]][2])
census02$cty_name_census <- lapply(census02$cty_name_census,
function(x) strsplit(as.character(x), ', ')[[1]][1])
# merge 2002 and 2007 data
census02_07 <- merge(census02, census07, by='cty_id')
# drop Alaska and Hawaii
census02_07 <- census02_07[which(! census02_07$state_name %in% c("Alaska", "Hawaii")), ]
# merge 2002-2007 data with czone corsswalk
census02_07 <- merge(census02_07, crosswalk)
# merge 2002-2007 data with 1992 data
census <- merge(census92, census02_07)
#-------------------------------------------------------
# Create 'long' dataset for change between 1992 and 2007
#-------------------------------------------------------
# group by czone and sum up value added and cost; NAs are treated as 0
manuf_long <- ddply(census, 'czone', summarise,
valadd92=sum(valadd92, na.rm=T),
valadd02=sum(valadd02, na.rm=T),
valadd07=sum(valadd07, na.rm=T),
cost92=sum(cost92, na.rm=T),
cost02=sum(cost02, na.rm=T),
cost07=sum(cost07, na.rm=T))
sum(census$valadd92[which(census$czone==100)])
2/2-1
source('~/Documents/phd/itrade/project/my_code/create_data.R')
View(manuf_panel)
manuf_panel[1,]
manuf_panel[1, 1:10]
View(adh_china)
source('~/Documents/phd/itrade/project/my_code/create_data.R')
library(foreign)
workfile_china_preperiod <- read.dta('/Users/andreea/Documents/phd/itrade/project/adh2013_data/dta/workfile_china_preperiod.dta')
View(workfile_china_preperiod)
summary(workfile_china_preperiod$yr)
summary(as.factor(workfile_china_preperiod$yr))
View(manuf_t1)
View(manuf_panel)
manuf_panel_preperiod <- rbind(manuf_t1, manuf_t2)
row.names(manuf_panel) <- NULL
View(manuf_panel_preperiod)
names(manuf_panel_preperiod)[grep('t2', names(manuf_panel_preperiod))]
names(manuf_panel_preperiod)[grep('t2', names(manuf_panel_preperiod))] <- 't2000'
manuf_panel_preperiod$t1990 <- 1 - manuf_panel_preperiod$t2000
adh_china_preperiod <- read.dta('/Users/andreea/Documents/phd/itrade/project/adh2013_data/dta/workfile_china_preperiod.dta')
intersect(names(adh_china_preperiod), names(manuf_panel_preperiod))
manuf_panel_preperiod <- merge(manuf_panel_preperiod, adh_china_preperiod)
View(manuf_panel_preperiod)
source('~/Documents/phd/itrade/project/my_code/create_data.R')
summary(manuf_long$d_02_07_valadd)
quantile(manuf_panel_preperiod$d_valadd, probs=seq(0, 1, 0.02))
quantile(manuf_panel_preperiod$d_output, probs=seq(0, 1, 0.02))
quantile(manuf_panel$d_output, probs=seq(0, 1, 0.02))
quantile(manuf_panel$d_valadd, probs=seq(0, 1, 0.02))
quantile(manuf_long$d_92_07_valadd, probs=seq(0, 1, 0.02))
quantile(manuf_long$d_92_07_output, probs=seq(0, 1, 0.02))
length(which(manuf_panel_preperiod$d_valadd>242))
930-19
manuf_long <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_data/manuf_long.csv')
manuf_panel <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_data/manuf_panel.csv')
manuf_preperiod <- read.csv('/Users/andreea/Documents/phd/itrade/project/my_data/manuf_panel_preperiod.csv')
View(manuf_long)
quantile(manuf_long$d_02_07_valadd, probs=seq(0, 1, 0.25))
quantile(manuf_long$d_02_07_valadd, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_92_02_valadd, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_92_02_valadd, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_02_07_valadd, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_92_07_valadd, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_92_02_output, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_02_07_output, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_92_07_output, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
source('~/Documents/phd/itrade/project/my_code/descr_stats.R')
quantile(manuf_long$d_92_02_valadd, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_02_07_valadd, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_92_07_valadd, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
summary(manuf_long$d_92_02_valadd)
mean(manuf_long$d_92_02_valadd)
sd(manuf_long$d_92_02_valadd)
mean(manuf_long$d_02_07_valadd)
sd(manuf_long$d_02_07_valadd)
mean(manuf_long$d_92_07_valadd)
sd(manuf_long$d_92_07_valadd)
summary(manuf_long$d_92_02_valadd)
mean(manuf_long$d_92_02_output)
sd(manuf_long$d_92_02_output)
mean(manuf_long$d_02_07_output)
sd(manuf_long$d_02_07_output)
mean(manuf_long$d_92_07_output)
sd(manuf_long$d_92_07_output)
quantile(manuf_long$d_92_02_output, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_02_07_output, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_92_07_output, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
View(manuf_long)
quantile(manuf_long$d_92_02_valadd, probs=seq(0, 1, 0.02))
length(which(manuf_long$d_92_02_valadd<0))/length(manuf_long$d_92_02_output)*100
length(which(manuf_long$d_02_07_valadd<0))/length(manuf_long$d_92_02_output)*100
summary(manuf_long$d_92_02_valadd)
summary(manuf_long$d_02_07_valadd)
summary(manuf_long$d_02_07_valadd[which(manuf_long$d_92_02_valadd<0)])
summary(manuf_long$d_02_07_valadd[which(manuf_long$d_92_02_valadd>0)])
summary(manuf_long$d_02_07_output[which(manuf_long$d_92_02_output>0)])
summary(manuf_long$d_02_07_output[which(manuf_long$d_92_02_output<0)])
length(which(manuf_long$d_92_02_valadd<0))
length(which(manuf_long$d_92_02_output<0))
quantile(manuf_long$d_02_07_valadd[which(manuf_long$d_92_02_valadd>0)], probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
quantile(manuf_long$d_02_07_valadd[which(manuf_long$d_92_02_valadd<0)], probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
summary(manuf_long$d_02_07_valadd[which(manuf_long$d_92_02_valadd<0)])
mean(manuf_long$d_02_07_valadd[which(manuf_long$d_92_02_valadd<0)])
sd(manuf_long$d_02_07_valadd[which(manuf_long$d_92_02_valadd<0)])
quantile(manuf_long$d_02_07_output[which(manuf_long$d_92_02_output<0)], probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
mean(manuf_long$d_02_07_output[which(manuf_long$d_92_02_output<0)])
sd(manuf_long$d_02_07_output[which(manuf_long$d_92_02_output<0)])
quantile(manuf_long$d_92_02_output-manuf_long$d_92_02_valadd, probs=c(0.1, 0.25, 0.5, 0.75, 0.9))
#----------------------------------------------------------------------------
# Read Gini data from the World Income Inequality Database
# https://www.wider.unu.edu/database/world-income-inequality-database-wiid34
#----------------------------------------------------------------------------
wiid_raw <- read.csv('./WIID3.4_19JAN2017New.csv')
#----------------------------------------------------------------------------
# Read Gini data from the World Income Inequality Database
# https://www.wider.unu.edu/database/world-income-inequality-database-wiid34
#----------------------------------------------------------------------------
wiid_raw <- read.csv('./wiid_gini/WIID3.4_19JAN2017New.csv')
library(foreign)
library(plyr)
setwd('/Users/andreea/Documents/phd/2ndyrpaper/data')
#----------------------------------------------------------------------------
# Read Gini data from the World Bank
# https://data.worldbank.org/indicator/SI.POV.GINI?view=chart
#----------------------------------------------------------------------------
wb_raw <- read.csv('./worldbank_gini/API_SI.POV.GINI_DS2_en_csv_v2.csv')
# For each country, keep just earliest and latest years of data
wb <- adply(wb_raw, 1, function(row) {
index <- which(!is.na(row[5:63])) # find years with data
if (length(index)<2) { # if there is no data for more than two years return NAs
output <- data.frame(first=NA, last=NA, first_gini=NA, last_gini=NA)
} else {
index <- index[c(1, length(index))] # find first and last year with data
yrs <- data.frame(first=index[1]+1959, last=index[2]+1959)
vals <- row[index+4]/100 # scale Gini to be between 0 and 1
colnames(vals) <- c('first_gini', 'last_gini')
output <- merge(yrs, vals)
}
return(output)
})
wb <- wb[, colnames(wb) %in% c('CountryCode', 'first', 'last', 'first_gini', 'last_gini')]
wb <- wb[complete.cases(wb),]
wb$d_gini <- wb$last_gini-wb$first_gini
# Keep just countries with observations more than 9 years apart
wb <- wb[which(wb$last-wb$first>=9),]
#----------------------------------------------------------------------------
# Read Gini data from the OECD
# http://stats.oecd.org/Index.aspx?DataSetCode=IDD#
#----------------------------------------------------------------------------
oecd_raw <- read.csv('./oecd_gini/IDD_15042018050521557.csv')
oecd <- oecd_raw[grep('GINI', oecd_raw$MEASURE),] # keep just Gini measures
oecd <- oecd[grep('TOT', oecd$AGE),] # keep just values for total population (above 18)
oecd <- oecd[oecd$METHODO=='METH2011',] # keep just older methodology due to lack of data for newer
# Keep just Gini for disposable income
oecd <- oecd[oecd$MEASURE=='GINI', colnames(oecd) %in% c('LOCATION', 'TIME', 'Value')]
# For each country, keep just earliest and latest years of data
oecd <- ddply(oecd, .(LOCATION), summarise,
first = min(TIME), last = max(TIME),
first_gini = Value[which.min(TIME)], last_gini = Value[which.max(TIME)],
d_gini = last_gini-first_gini)
# Keep just countries with observations more than 9 years apart
oecd <- oecd[which(oecd$last-oecd$first>=9),]
#----------------------------------------------------------------------------
# Read Gini data from the World Income Inequality Database
# https://www.wider.unu.edu/database/world-income-inequality-database-wiid34
#----------------------------------------------------------------------------
wiid_raw <- read.csv('./wiid_gini/WIID3.4_19JAN2017New.csv')
View(wiid_raw)
# Keep just data with high quality
wiid <- wiid_raw[wiid_raw$Quality=='High',]
View(wiid)
summary(wiid$Source)
length(grep('World Bank', wiid$Source))
wiid$Country[grep('World Bank', wiid$Source))]
wiid$Country[grep('World Bank', wiid$Source)]
# Keep just data with high quality
wiid <- wiid_raw[wiid_raw$Quality %in% c('High', 'Average'),]
wiid$Country[grep('World Bank', wiid$Source)]
summary(wiid$Source)
wiid <- wiid_raw[grep('World Bank', wiid_raw$Source)]
wiid <- wiid_raw[grep('World Bank', wiid_raw$Source),]
summary(as.factor(wiid_raw$Year))
View(wb)
summary(as.factor(wiid$Year))
summary(as.factor(wb$first))
#----------------------------------------------------------------------------
# Read Gini data from the World Income Inequality Database
# https://www.wider.unu.edu/database/world-income-inequality-database-wiid34
#----------------------------------------------------------------------------
wiid_raw <- read.csv('./wiid_gini/WIID3.4_19JAN2017New.csv')
# Keep just World Bank Data
wiid <- wiid_raw[grep('World Bank', wiid_raw$Source),]
colnames(wiid)
